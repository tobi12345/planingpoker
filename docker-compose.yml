version: "3.3"
services:
    backend:
        build:
            context: .
            dockerfile: ./config_docker/backend.dockerfile
        env_file: production.env
        command: ./dist/b-main/index.js
        ports:
            - 4000:4000
        networks:
            - pp
            - proxy
        depends_on:
            - postgres
        labels:
            - "traefik.enable=true"
            - "traefik.http.middlewares.backend_stripprefix.stripprefix.prefixes=/api"
            - "traefik.http.routers.backend.middlewares=backend_stripprefix"
            - "traefik.http.routers.backend.rule=Host(`pp.kleselcodes.de`) && PathPrefix(`/api`)"
            - "traefik.http.routers.backend.entrypoints=websecure"
            - "traefik.http.routers.backend.tls.certresolver=myresolver"
            - "traefik.http.services.backend.loadbalancer.server.port=4000"
    postgres:
        image: postgres
        restart: always
        environment:
            POSTGRES_PASSWORD: postgres
            POSTGRES_USER: postgres
            POSTGRES_DB: pp
        networks:
            - pp
        volumes:
            - pgdata:/var/lib/postgresql/data

    redis:
        image: redis
        restart: always
        networks:
            - pp

    game-ui:
        build:
            context: .
            dockerfile: ./config_docker/dashboard.ui.dockerfile
        env_file: game.production.env
        networks:
            - proxy
        expose:
            - "80"
        depends_on:
            - backend
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.game-ui.rule=Host(`pp.kleselcodes.de`)"
            - "traefik.http.routers.game-ui.entrypoints=websecure"
            - "traefik.http.routers.game-ui.tls.certresolver=myresolver"

networks:
    pp:
    proxy:
        external:
            name: "traefik_proxy"

volumes:
    pgdata:
